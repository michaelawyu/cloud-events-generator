// Code generated by vfsgen; DO NOT EDIT.

package vfsgen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2019, 8, 16, 6, 29, 12, 463913346, time.UTC),
		},
		"/nodejs": &vfsgen۰DirInfo{
			name:    "nodejs",
			modTime: time.Date(2019, 8, 16, 6, 29, 12, 463887834, time.UTC),
		},
		"/python": &vfsgen۰DirInfo{
			name:    "python",
			modTime: time.Date(2019, 8, 8, 4, 53, 20, 518289887, time.UTC),
		},
		"/python/README.md": &vfsgen۰CompressedFileInfo{
			name:             "README.md",
			modTime:          time.Date(2019, 8, 6, 4, 59, 20, 645250003, time.UTC),
			uncompressedSize: 528,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x4f\x6f\x13\x31\x10\xc5\xef\xfe\x14\x23\xe5\xd2\x88\x66\x73\xe8\xad\xb7\x08\x21\xe8\xa9\x11\x84\x53\x14\x29\x8e\xfd\xb2\xb6\xb0\x3d\xc6\x33\x4e\xb5\xdf\x1e\xed\x16\x0a\x48\x3d\x3f\xff\xe6\xfd\xf1\x8a\x3e\x26\xee\x9e\x3e\xdd\x50\x54\xe8\x33\x0a\x9a\x55\x6e\xb4\x6b\x1a\xaf\xd6\xa9\x18\xb3\x5a\xd1\xf3\x0d\xed\x16\xf1\x62\x0e\x21\x0a\x55\xeb\x7e\xd8\x11\x14\x85\xc6\x57\x00\x9e\x2e\x13\x69\x00\x1d\xdf\xbf\x77\xba\x0b\xaa\x55\x1e\xb7\xdb\x31\x6a\xe8\x97\xc1\x71\xde\xe6\xe8\x82\x45\xb2\x2f\x53\xdf\xba\x19\xdb\x60\xc1\x36\xe3\x1f\x6c\x3d\x98\x27\xa5\x80\x54\x85\x26\xee\x04\x2b\x11\x8d\x6a\x63\xdf\x1d\xc8\x16\x4f\x8e\x8b\xf4\x8c\xff\x7a\xdc\xff\x56\x52\xb2\x17\x9e\xe3\x11\x17\x33\x71\x6f\xb4\x18\x6c\x7c\x8b\x37\x14\x92\x49\x14\x59\x06\x63\x0e\x01\x6f\xad\xba\x40\x28\xb3\x8f\xd7\x08\x4f\x8a\x5c\x93\x55\x08\x5d\x1b\x67\x3a\x3e\x57\x94\xdd\xfe\xe9\xbd\x66\x5c\x51\x6c\x8d\x7f\xd3\x0f\x0a\x17\xd6\xc3\xb2\xe0\x57\xfc\xec\xb1\x21\xcf\xf1\xcc\x7e\xd2\xc0\x85\x1e\x3e\x2c\xd2\x77\xb1\x23\xcc\x81\x67\x67\xd2\x7f\x06\xbe\xa7\x58\x44\x6d\x4a\x14\x95\x12\x3b\x9b\xd2\xf4\x68\xcc\xf9\x7c\x36\x35\xd6\x87\x37\x75\x03\x3a\xee\x77\x87\x2f\xa7\x45\x32\xdf\x80\xd7\xaf\xf0\xec\xfa\x6c\x68\x35\x72\x39\xdd\xad\xe9\xca\x8d\x32\x37\xd0\xd8\xa3\x87\x2c\x2b\xcd\x47\x5a\x77\xf3\x13\x19\xcc\xaf\x00\x00\x00\xff\xff\x6b\x44\x20\x15\x10\x02\x00\x00"),
		},
		"/python/__init__.mustache": &vfsgen۰CompressedFileInfo{
			name:             "__init__.mustache",
			modTime:          time.Date(2019, 8, 8, 8, 8, 40, 752584975, time.UTC),
			uncompressedSize: 158,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\xb1\x0e\xc2\x30\x0c\x04\xd0\xdd\x5f\x61\xa9\x0b\x0c\xc0\x5a\x75\x67\x42\xe5\x17\xa2\xd0\x38\xa8\x22\x89\x21\x4e\x58\xac\xfc\x3b\x2a\x81\xf1\xee\xf4\x6e\xc0\x85\xdd\x9a\xee\x13\xd6\xe2\x0f\x23\xc0\x80\x3e\xd8\x07\x8d\x13\x26\x7e\x59\xf0\x99\x23\x1a\xe3\x6b\xa9\x99\x8c\xc1\x35\x3e\x39\x17\xb4\x37\xe1\x50\x0b\x99\x9e\x37\xf6\x5b\xe8\x4d\xa9\xe0\x12\xac\xc8\x8e\x64\x0f\xaa\xc3\xcc\x4e\x5a\xfb\x3e\x1d\x55\x67\x76\x57\x1b\xa9\xb5\xbf\x50\x3d\x6f\xe6\x12\xa4\xf7\xa0\x7a\xea\x04\x3e\x01\x00\x00\xff\xff\xcb\x09\x33\x7e\x9e\x00\x00\x00"),
		},
		"/python/__init__mod.mustache": &vfsgen۰CompressedFileInfo{
			name:             "__init__mod.mustache",
			modTime:          time.Date(2019, 8, 6, 3, 44, 35, 949550340, time.UTC),
			uncompressedSize: 157,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8c\x4d\x0a\x02\x31\x0c\x46\xf7\x3d\x45\xa0\x6b\x75\x3b\xcc\x15\x06\xbc\x42\x89\xd3\x54\x06\xdb\x46\x9b\xd4\x4d\xe8\xdd\xc5\x51\xc1\xe5\xf7\xf3\x9e\x87\x95\xe3\x56\xaf\x33\x74\x4d\x87\xc9\x39\x0f\x29\xe3\x8d\xa6\x19\x2a\x3f\xd0\xa5\xc6\x05\x42\x48\x5d\x7b\xa3\x10\x60\x2b\x77\x6e\x0a\x78\x11\xce\x5d\x29\x7c\xf2\x1b\xfb\x2e\xf4\xa4\xaa\x80\x35\x42\x44\x45\x58\x33\x8a\x90\x38\x33\xbf\x64\x19\x63\xf7\x1d\xcd\x96\x2c\x67\x2c\x34\xc6\x8f\xfb\xab\x9c\xd9\x69\x3f\xbf\x02\x00\x00\xff\xff\xba\xbc\x4c\xcc\x9d\x00\x00\x00"),
		},
		"/python/base_model.mustache": &vfsgen۰CompressedFileInfo{
			name:             "base_model.mustache",
			modTime:          time.Date(2019, 8, 8, 8, 12, 31, 21303731, time.UTC),
			uncompressedSize: 2304,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\x94\x43\x24\x40\x55\xdb\xab\x00\x17\x45\x0f\x45\x5b\x20\x6d\xd1\x0a\x7b\x31\x0c\x99\xb6\x46\x31\x13\x89\x64\x38\xe3\x85\xbd\x41\xfe\xfb\x82\xd4\xa7\x2d\x7b\xbd\x9b\xe5\xc5\x26\x39\xef\xcd\x9b\x47\x71\x28\x1b\xa3\x2d\xc3\x13\x69\x15\x74\xff\x8d\xb1\x52\x71\x3f\xe3\xa3\x91\xea\x31\xe8\xa7\x24\x0f\x41\x50\x59\xdd\x40\x0a\xdd\xd2\x9e\x65\x1d\x04\x39\x2c\xba\xd8\x34\x3f\x1a\xfc\x20\x6c\x74\x9f\xdf\xc7\x41\x10\x6c\x6b\x41\x04\x0f\xba\xc4\x3a\xd2\x9b\x27\xdc\x72\x9c\x05\x00\x00\x77\xa0\x0d\x2a\x61\xa4\x03\x50\x06\xf9\x0e\xe1\x19\x8f\x20\x09\x04\xb3\x95\x9b\x3d\x23\x28\xd1\x20\x08\x55\x02\xef\xb0\x43\x7d\x14\xf5\x1e\x4f\xa3\xf8\x68\x30\xf5\xdb\x1d\x65\xe1\x56\x08\x16\xf0\xfa\x16\x74\xb0\x21\xfa\x41\x98\x77\x24\x73\x16\xb5\x08\x05\x25\x56\x52\x49\x96\x5a\xb5\x49\x07\x86\xa2\x11\x66\x92\xf4\x57\x5f\x7b\x83\xbc\xd3\xa5\x5f\x28\xb1\x02\xe7\x5e\x51\xca\x2d\x47\xdb\x9a\xb2\xa9\x69\xcb\x7c\x95\x40\x29\x9f\x39\x86\x1f\x7e\x81\xbc\x75\xc9\x8d\x30\x0c\xff\x43\xde\x5b\x45\x4e\x19\x38\x30\x08\x02\x01\x8d\x73\x35\x0c\xc3\x21\xd2\xfa\x30\x7f\x26\x69\x89\x84\x56\x8a\x5a\x7e\xc2\xc2\x07\x46\x8e\x3b\x81\x6d\x4d\x71\x30\xc8\x61\xdd\x8a\x21\xac\xab\xf8\x6a\x4a\x8f\x07\x63\xb5\x41\xcb\x12\xa9\x4d\xef\x80\xc1\x00\xc9\xac\x33\x3d\x6b\x57\x27\x3c\x13\x71\xb4\xaf\x79\xe2\x8f\x1b\x95\xb6\xde\xbf\x04\x0a\x67\x2d\xc9\x43\x2a\x19\xad\x64\x6c\xc8\x8b\x4a\x4f\x8e\x74\x22\xd1\x8d\xf6\x78\x16\xf0\x88\xec\x48\x3c\x20\xf1\x7c\xf1\x49\x9c\xac\x40\x92\x54\xc4\x42\x6d\x31\xf2\xa8\x04\x6a\x49\x7c\xc6\x37\xca\x5c\x3a\x92\x15\x2c\x7c\x54\xd4\x08\x13\xcd\x02\xdd\xa8\x45\xb3\x29\x05\x1c\x32\x38\xa4\xbd\x95\xb1\x4b\xb7\x13\xe4\x15\x1d\x12\x08\xbb\x8d\x30\x06\xac\x09\xe1\x90\x5c\xa4\xf2\xaa\x66\x3b\xf1\x69\x21\x58\x4f\xb8\xbb\x3a\x46\xfe\x9b\xc5\x78\xc4\x28\x74\x4e\x3d\x77\xc9\x45\xde\x26\xf6\x7c\xb7\x5c\x72\x87\x9a\x41\xe4\x7e\x96\x3f\xad\x12\x3f\x5f\xfe\xbc\x1a\xf5\xc4\x17\xd1\x93\x8a\x3b\xc4\xdc\x53\xb7\xf1\x05\x5b\xd3\xf6\x7b\x9a\xf3\xcf\xec\x25\xfc\x3a\x13\x83\xf3\x3b\xd7\x06\xf9\xd5\x1b\x97\xff\xaf\xff\xff\xf9\xfb\xf2\xe5\x77\x4d\xa6\x20\xb6\x19\x10\xdb\x1b\x5d\xc0\xb1\x40\x29\x58\x5c\x69\x05\xee\xb2\xc3\xc2\x53\xa6\xb5\x16\x25\x45\x3d\x7b\x7c\x2e\x7d\x5b\x53\x3a\xb6\x25\xdf\x81\xc6\x3a\xba\x26\xe1\x45\xbf\xa7\x49\x78\x9d\xc4\xd6\x3f\x23\x3d\xb2\xef\x15\xc4\xf6\x4a\xab\xf0\xc2\xbc\xf8\x72\xdf\x98\xae\x15\x4c\x3e\x94\xa9\x36\xea\x6e\xfe\x75\x69\x6d\x7e\xb0\x68\x2c\x12\x2a\x16\xae\x79\x83\xae\x46\xdd\xdf\xac\xad\x7d\x27\x53\x53\x69\xdb\x08\x9e\xe9\x1b\xfc\x7b\x7d\xbd\xfb\x4d\xaa\x52\xaa\xc7\xb7\xb7\x7e\xe1\x4f\xfa\x23\xcf\xff\x1d\xe6\x3f\x9e\xcf\x47\xc0\x50\x66\x51\x38\xf1\x45\x71\xa1\xd0\xdf\xb5\x85\xb5\x57\xb3\xf6\xaf\xd7\xba\x95\xb6\xbe\x20\xba\x57\xe9\x1c\x8b\xa7\xe4\xf8\xd2\x51\x27\xa0\x79\x87\xf6\x8a\x95\xd6\x3d\x86\x15\x6c\x34\xef\xa0\x7d\xcc\x09\x84\x45\xc0\x97\xbd\xb8\xf4\x10\xf9\x7c\x85\x37\xa5\x28\x60\xb1\x68\xc9\x87\x95\xa9\x02\x85\xdf\xa5\x40\x69\xbe\xaa\xc2\xed\x39\xe6\x41\xc0\x10\xf0\x39\x00\x00\xff\xff\x32\x09\xa7\x28\x00\x09\x00\x00"),
		},
		"/python/model.mustache": &vfsgen۰CompressedFileInfo{
			name:             "model.mustache",
			modTime:          time.Date(2019, 8, 17, 12, 11, 36, 840743300, time.UTC),
			uncompressedSize: 5524,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5b\x6f\xdb\x36\x14\x7e\xf7\xaf\x38\xb0\x1f\x2c\x61\x8e\x9c\xac\x1d\xb0\x19\x4d\xb1\xac\x49\xbb\x60\xbd\xa1\x4b\xfb\xb0\xa2\x51\x68\xe9\xd8\xe6\x2a\x91\x2a\x49\xa5\xf5\x08\xfd\xf7\x81\xd4\x8d\xb2\xe4\xa4\x69\x5a\x03\x2d\xc4\x23\xf2\x7c\xfc\x3e\x9e\x0b\x95\x09\x44\x3c\xa6\x6c\xbd\x80\x5c\xad\x0e\x7e\x1d\x8d\x56\x82\xa7\x10\x86\xab\x5c\xe5\x02\xc3\x10\x68\x9a\x71\xa1\x80\x2c\x25\x4f\x72\x85\x61\x39\x2e\xa7\xc5\x44\xa1\xa2\x29\xd6\x93\xcc\x78\xd6\x5a\x61\x02\x8c\x7f\x22\x0b\x78\xfa\xf0\xf0\x68\x54\xcd\xc9\x73\x1a\xd7\xcf\x02\x2b\x3c\xb5\xcd\x28\x5b\xd7\x6e\x9e\x53\xa9\x66\x70\x4a\x23\xb5\xe3\xa2\x9c\x1c\x04\x4b\x22\x31\x4c\x79\x8c\x49\xbd\xe4\x85\x19\xd4\xaf\x6b\x63\xae\x68\x32\x1a\x69\x3d\x39\xb7\x63\x59\x14\xd5\x0c\xad\xff\x4a\xe4\x4b\x92\x62\x51\xd4\x73\x5d\x53\x03\x7a\xf6\xcb\xe1\xd1\x48\xeb\x79\xbb\xde\x78\xb3\x58\x45\x31\x8a\x12\x22\xa5\xbb\xd0\xb3\x6f\xfc\xc5\x08\x00\x60\x3c\x1e\xbf\x7c\x75\x71\xb6\x80\x8b\x0d\x95\x50\xce\xa5\x12\x48\xae\x38\xac\x91\xa1\x20\x0a\x63\x58\x6e\xe1\x49\xc2\xf3\x18\xce\xae\x91\x29\x09\xcf\xca\x37\x5c\x58\x1f\xde\x46\xa9\x4c\x2e\xe6\xf3\x35\x55\x9b\x7c\x19\x44\x3c\x9d\xa7\x34\xda\x10\x4c\xc8\xe7\x6d\x3e\x8f\xcc\xd2\x03\xb4\x4b\x0f\xd6\xf5\x52\xdf\xae\xcd\xa5\x51\x34\xe5\x31\x5d\x51\x8c\x41\x61\x9a\x25\x44\xa1\x04\x2b\xc1\xab\x0c\xd9\xc9\xeb\x73\x58\xdf\x8a\x57\xcd\xbc\xe0\x3c\x91\x73\x9e\x21\x23\x19\xed\x61\xb1\x18\x05\x9c\x64\x24\xda\x20\xfc\x1c\x1c\xc2\x73\x1a\x21\x93\x18\x8c\xec\xeb\x53\x0e\x8c\x2b\xc0\x98\x2a\x50\x1b\xac\xc4\x48\x09\xcb\x49\x92\x6c\x83\x5a\xae\x72\x72\x8c\x2b\x08\x43\xca\xa8\x0a\x43\x4f\x62\xb2\x9a\xc1\x72\x9b\x11\x29\xc3\x68\x83\xd1\xc7\xe3\xa7\x24\x91\xa8\xf5\xe4\x1d\x11\xb2\x28\x66\xa0\x75\x29\xfe\xb1\xd6\x93\x53\x5c\x91\x3c\x51\xef\x48\x92\x63\x51\x68\xad\xbb\x86\x42\xeb\xf9\xee\x94\xcb\xae\xe1\x25\x67\x38\x30\x6b\x5e\xa2\xf9\x8b\x9d\xd8\x80\xea\x37\x1e\x8f\xdd\x00\x3a\x00\x02\x65\x78\xc6\xb8\xa2\x0c\x63\xa0\x6c\xdf\x39\x37\x3e\x1a\x4e\x8d\x65\x91\x11\x41\xd2\x86\xa1\x09\x25\x6c\x46\xc0\x57\xa0\x4c\x68\x39\xc0\xc1\x9e\xed\x2d\xd4\x36\x43\xc7\x8f\xd6\xa7\x44\x91\x8b\x6d\x86\x0e\x5a\xc3\xd2\x65\xd5\x3c\x9b\x93\x08\xaa\xe3\x0f\x8d\x3b\x09\xc7\xa0\x47\xfd\x4d\x9b\xdf\xb4\x86\x9a\x1a\x2c\x07\xac\xd0\x7a\xf2\x27\x91\x2f\xb8\xc0\xa2\x98\x69\x3d\x6f\x06\xa3\x3e\x7c\x31\xea\xa2\x13\xa5\x04\x5d\x9a\x1a\x94\x92\xec\x2b\xd1\xa7\x5a\xff\x41\x24\x56\xe3\xbb\xa1\xd7\x4f\x74\x65\xc3\xd7\x8d\xc2\xc5\x1e\xe8\x66\xaf\xcd\x29\x1d\x37\xb2\x0f\x60\x60\x22\xf1\x56\x57\xe1\xcd\xbe\xec\xa2\xdf\x6d\x4a\xa5\xa8\x36\x3c\x6e\xb2\xc8\x24\x7a\x18\xd3\x48\x79\x51\x22\x67\x10\xd3\x8f\xca\x87\x83\xc7\x46\x93\x26\x62\xa6\x0b\xf7\xb4\xdf\xa0\xca\x05\x93\x36\x49\xcd\x42\x20\xb2\x8e\xe4\xd1\x6e\x54\x1a\x77\x0b\x38\xb1\xf3\x82\x6e\xa4\x2d\xac\xb1\xb5\x09\xeb\x76\x01\x27\x0c\x28\x93\x8a\xb0\x08\xef\x14\xbd\xa2\x74\xea\x4c\x1d\x0c\xd1\x12\xc6\x56\xfd\x20\x46\x89\x82\x92\x84\xfe\x57\x35\x0a\xcf\xec\x77\x06\x51\x22\xfd\x7a\xbe\x23\x7c\x29\x62\x26\x78\x86\x42\x6d\x1b\x05\x6b\xb9\x6d\x1d\xf2\x3b\x52\x3d\x43\x55\xea\x74\x63\x3e\xba\xd9\xad\x4f\x51\x46\x82\x66\x8a\x72\x56\xf4\xba\x4c\x5f\xad\x5b\x93\x7d\x40\xa0\x81\xb4\x1e\x50\xa8\x1b\x56\x15\xf9\x7a\x18\x48\x54\x0a\xc5\xb0\x06\x6d\xb9\xed\xaa\xf1\xf7\x0f\x53\xe3\xce\x25\xf0\x6e\x45\xcf\xb6\x1d\xad\x27\x27\xb9\xe2\x36\xad\x26\xe7\xf2\xed\xdb\xf3\xd3\xeb\x87\x45\xa7\x00\x34\x90\x54\x82\xe9\x11\x8b\xdb\x73\x55\x2a\xe1\x99\xcb\x4e\x60\xfe\x7b\xe8\xf9\xbe\xbd\x49\xb4\xde\x2d\xd6\x9b\xa7\x4f\x1e\x3c\x78\xf0\xdb\xbd\xc1\xea\x3b\x57\x90\xab\x88\xf1\xcf\x9e\x1f\x50\xc9\x57\x5c\xa4\x44\x79\xd3\x8b\xa9\x0f\x3f\xc1\xf4\x9f\x69\xb9\x83\x3e\x66\x59\x87\x6e\x05\x71\xab\x4f\x23\xd8\xa5\x2b\xdd\x19\xcb\x53\xc7\x2f\x49\x12\xfe\x19\xe3\xf0\xda\xf4\x51\xd3\x30\xde\x1b\xa9\x8d\x91\x2c\x13\xb4\xdd\x55\xda\x3e\xdd\x36\x68\xa7\x40\x83\x5b\xa1\x0d\xe4\xee\xc2\x0f\xbd\x9b\xda\xe4\x5c\x3e\xe1\x4c\x11\xca\x50\xd4\x7b\x32\xb7\x49\xd7\xe8\x08\x6d\xca\xba\x44\xe5\xe9\x9a\x59\x61\x74\x93\xf9\xd2\x18\xcd\xbf\x2e\x01\xdf\xef\x8a\x24\x08\x95\x08\x76\x37\x67\x42\x70\xe1\xf5\x24\x1c\x9f\xb3\x6b\x92\xd0\x18\x2a\x05\x56\x5c\xc0\x55\x8b\x76\x05\xef\xf5\x61\xf1\x61\x06\x69\x2e\x15\x2c\x11\x08\x94\xe0\x26\xb2\xdf\xeb\xa3\xe2\xc3\x78\x4f\x4d\xac\x7f\x41\x75\xc6\xe3\x19\x8c\x83\x7f\x39\x65\x5e\x4a\x32\x4f\x2a\x31\xdb\x25\x06\x07\x30\xc4\xc8\x9f\xdd\x82\xd0\x50\xe9\x23\xf4\x7c\x75\x16\x57\xf1\xbe\x2b\xbf\x35\x76\x0d\x97\x5d\x43\x27\x13\xea\xfd\xdb\xb3\xa2\x6c\x07\xf3\x7e\xe7\xd1\x3f\x0e\x4f\x1f\x16\x7e\x7b\x1c\x9c\xd9\x46\xa5\x8f\x8a\xf1\x5e\xe5\xdb\xe5\x3d\x41\x86\xe4\xe8\x49\x51\xa5\x8c\x55\xa1\x79\x9e\xbc\xc1\x4f\x39\x15\x18\xdf\xa5\x30\xf4\xe8\x0f\xb3\x2d\x5d\x5c\x55\x2c\xed\xcd\x06\xe1\xca\xb8\xbb\x1a\xfb\xfd\x6f\x1f\x67\x27\x65\x76\xbe\x33\x2e\x49\x59\xb7\xed\xe7\x10\xf9\xf2\x1c\xd9\x5a\x6d\xf6\xef\xd5\x80\x18\x00\x20\x2c\x86\x04\x99\xd7\x74\x11\x78\x0c\x5a\x3b\x1e\xee\xc7\x28\xb1\x5e\x9a\xe3\x4b\x50\x9a\xae\x44\x18\x70\x01\xf8\x29\x27\x09\x28\x6e\x16\x38\x80\x83\x9c\x5d\x4a\x86\x21\x65\xf7\x60\xf8\xc8\x30\x6c\x3d\x7c\x57\x86\x6b\x81\x44\xa1\x18\x26\xd9\x62\x0e\x93\x74\x58\x95\xc7\x48\xd3\x4e\xf5\xbe\x89\x62\xf3\xe2\xb1\xd6\x93\xb3\x2f\x51\x92\x4b\x7a\x8d\x8d\x8f\x63\xad\xe7\x7d\x6b\x79\xd4\xe5\xf3\xbe\x2f\xa9\x6f\x0e\x64\x5b\x3d\xcb\xf7\xed\xb9\x6b\x7d\xd9\xdf\x86\xab\xd3\xe0\x3e\xaf\x9c\x7d\xee\x8b\x8f\x4a\xab\x32\x3a\xbe\x45\xb8\x47\x1d\xe1\x6a\x1f\x5d\xe1\x6a\x6b\x19\x41\x3f\x5e\xb8\x4e\x38\x75\xb4\xab\xd1\xf7\x6a\x57\x4f\xb8\x72\xb6\xba\x2f\xec\x5a\xed\x5e\x13\x73\xd7\x64\x5f\xa9\x9d\x19\x08\x0c\x24\x12\x11\x6d\x3c\x31\xd5\x5a\x37\x0e\x8a\xa9\x7b\x37\xfd\xde\x1a\xa5\x44\x45\x1b\xc8\x4a\x30\xdb\x32\x5a\xe0\x41\x96\x2d\xb1\x32\xb5\xce\x15\xa6\xf2\x3e\x05\xb2\x72\x70\xbf\xea\xc1\xf2\x74\x89\xc2\xb4\x34\x6a\xdc\x7d\x55\xa1\xac\x80\xf7\xe5\x41\x4d\xac\x4c\x84\x6f\xa7\x59\x55\xc9\x1f\x4a\xf3\x96\x6a\x79\x23\xd3\x96\x5b\x79\x2b\xdd\xe9\x82\x6d\x23\xef\xfe\xcd\x62\xf0\xfa\xdc\xb9\x3f\xd7\xdf\xf1\x06\xa4\xfa\xc3\xe2\xff\x01\x00\x00\xff\xff\x88\x59\x70\x69\x94\x15\x00\x00"),
		},
		"/python/requirements.mustache": &vfsgen۰CompressedFileInfo{
			name:             "requirements.mustache",
			modTime:          time.Date(2019, 8, 8, 1, 15, 34, 904035169, time.UTC),
			uncompressedSize: 120,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xce\xac\x50\xb0\xb3\x55\x30\xd4\x33\x34\xd4\x33\xe0\x2a\x4e\x2d\x29\x2d\x28\xc9\xcf\xcf\x29\x06\x09\x1a\x19\xea\x19\xe8\x19\x70\x55\x57\x2b\xbb\xa4\x16\x14\xd7\xd6\x82\x58\x9e\xc5\x5e\xc1\xfe\x7e\x60\xb6\x3e\x12\x5b\xd9\xb3\xd8\x23\x24\x24\xa0\xb6\x96\xab\x28\xb5\xb0\x34\xb5\xb8\x04\x62\x80\x9e\x11\x58\xbf\x3e\x5c\xb6\xba\x5a\x1f\x62\x16\x20\x00\x00\xff\xff\x09\xeb\x33\xb5\x78\x00\x00\x00"),
		},
		"/python/setup.mustache": &vfsgen۰CompressedFileInfo{
			name:             "setup.mustache",
			modTime:          time.Date(2019, 8, 8, 7, 1, 46, 974393132, time.UTC),
			uncompressedSize: 660,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x92\x4f\x6b\xe3\x30\x10\xc5\xef\xfa\x14\x43\x7c\x48\x0b\x69\x7c\x5d\x02\x3a\x14\x37\x87\x42\x9b\x96\xd4\xed\x25\x14\xa3\xb5\x27\xb1\xa8\x2c\x69\xa5\x51\x8b\x31\xfe\xee\x8b\x2d\xe7\x1f\xbd\x79\xde\x4f\xc3\xf0\xde\x73\x02\xa5\xa9\xa4\x3e\xac\x20\xd0\xfe\xee\x0f\x63\xb2\xb1\xc6\x11\xf8\xd6\xb3\xbd\x33\x0d\x78\xa4\x60\xc9\x18\xe5\xe1\x88\x06\x65\x01\x7b\xa9\xab\xc2\x8a\xf2\x4b\x1c\xd0\x33\xd6\x75\xc9\x33\x92\xa8\x04\x89\xbe\x67\x9b\xfb\xe7\x35\x70\x98\x75\xdd\x6b\x7c\xb1\x11\x0d\xf6\xfd\x8c\x7d\xac\xb7\x6f\x8f\x2f\x9b\xc8\x3e\xd0\x79\x69\xf4\xa0\x3f\xac\xdf\xb2\xed\xe3\x6b\x7e\x62\x0f\xe8\x4b\x27\x2d\x4d\x3c\x7b\xd9\xe4\xf7\x59\x1e\x59\x66\x34\x89\x92\x06\xfd\x7d\xfb\x14\xb5\xf7\xed\xd3\x30\xb3\x04\x72\x03\x52\x7b\x12\x4a\x01\xd5\x08\x4a\xfe\x75\xc2\xb5\x0b\x70\x41\x8f\xc2\xde\x28\x65\x7e\xa4\x3e\xb0\x84\x25\x60\x5b\xaa\x8d\x3e\x6d\xdc\x21\x2c\xa3\xee\xd0\xe1\xbf\x20\xbd\x24\x5c\x5d\xa4\xc0\x12\xa8\x89\xec\x2a\x4d\x6d\x6b\xe5\x32\xae\x2f\x8d\x3b\x8c\x73\x7a\xf1\x90\x8d\xdf\x37\x0c\x00\x40\x8b\x06\xf9\x10\xca\x62\x1c\xbf\xa3\x71\x3e\xa5\x11\xc5\xea\xec\x98\x5f\xc4\x11\xa1\x08\x54\x1b\x57\x60\x23\xa4\xe2\x53\x18\x91\x04\xa7\xf8\xc9\x7f\x94\xbe\xb0\xfd\x31\xae\xf2\x7c\x37\xcb\x94\x09\x15\xac\xbf\x51\x93\x9f\x2d\x7e\x17\xf2\x19\x37\x26\xfb\xc5\x68\xd9\xa1\xe7\xbb\x09\x1c\x0b\xe6\x57\x75\xdf\xdc\x5e\xd1\x62\x68\x9d\x77\xf3\xf9\x0a\x76\x73\x6f\xb1\x4c\x71\x3c\xb8\x6c\x45\xa3\xe6\x9f\xfd\xf1\x46\xa9\x42\x85\xc5\xd5\x52\xee\x02\xb2\x5b\xd6\x75\xe9\xf9\xef\xf9\x1f\x00\x00\xff\xff\x7f\x55\xd9\x30\x94\x02\x00\x00"),
		},
		"/python/typing.mustache": &vfsgen۰CompressedFileInfo{
			name:             "typing.mustache",
			modTime:          time.Date(2019, 8, 8, 6, 56, 5, 122341728, time.UTC),
			uncompressedSize: 123,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\xf6\x2c\x0e\x2e\x29\xca\xcc\x4b\xaf\xad\x2d\x2e\x29\xaa\xae\xd6\x47\xf0\xc1\x92\x9e\x79\x25\xa9\xe9\xa9\x45\xb5\xb5\x99\x79\x25\x60\x59\xb8\x00\x58\xda\xaf\x34\x37\x09\xc4\x49\xcb\xc9\x4f\x84\xc8\xc3\x44\xc0\xd2\x4e\xf9\xf9\x39\xa9\x89\x79\xb5\xb5\x49\xf9\xf9\x39\x60\x69\xb8\x08\x20\x00\x00\xff\xff\x9f\xfd\x1d\xec\x7b\x00\x00\x00"),
		},
		"/python/util.mustache": &vfsgen۰CompressedFileInfo{
			name:             "util.mustache",
			modTime:          time.Date(2019, 8, 17, 10, 31, 29, 193505718, time.UTC),
			uncompressedSize: 3439,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x8b\xf3\x36\x10\xbe\xfb\x57\x0c\x39\x25\x10\xcc\xfb\x5e\x4a\x09\xec\xa1\xf0\x96\x52\x28\x3d\x94\xed\x69\x1b\x8c\x62\x4f\xb2\xea\xda\x92\x91\x26\xdb\x4d\xbb\xfd\xef\x65\x46\x96\x23\x7f\xe4\x63\x59\x9a\x43\xe2\xc8\x33\xcf\x48\xcf\xcc\x3c\x1a\xdd\xb4\xd6\x11\x54\x8a\x90\x74\x83\x59\xd6\x2d\x78\xfd\x16\x1f\xe9\xd4\x6a\x73\xc8\xb2\xac\xc2\x3d\x14\x15\x7a\x74\x5a\xd5\xfa\x6f\x5c\x56\x8a\xd4\x1a\x5e\x6a\xe5\xfd\x6a\x93\x01\x00\x2c\x16\x8b\x6f\x67\x03\x0f\x95\x2e\x69\x0d\xb5\xf6\xb4\x06\x4f\x0e\xb4\x21\x0b\xca\x80\xdd\xfd\x89\x25\xe5\x99\x38\x6d\x5a\xe5\x54\xc3\x7b\x50\x9b\xc4\x03\xac\x63\x9f\x3c\xb5\x91\x58\x1b\x28\xf9\x07\x6a\x4d\xe8\x54\xbd\xee\x0c\xb5\x39\x80\xdd\x77\xef\x8c\x6a\x30\xc2\x3b\xa4\xa3\x33\x9b\x3e\x68\xb7\x51\xf9\xd5\x7b\x89\x0b\xda\xc3\xaf\xd6\x60\x38\x05\x7f\x82\x93\x2c\x66\xd1\x52\xa2\x83\x36\xcc\x4e\xae\x0d\xe1\x01\x5d\x41\xa7\x16\x3d\x6f\xa1\x7f\xbb\xdc\xd7\x56\x85\x03\xaf\x61\x67\x6d\xbd\x9a\xc0\xa6\x34\x16\xad\xd3\x8d\x26\xfd\x3a\x24\x54\x5c\xb0\xee\xc3\x3e\x3c\x74\x07\xb8\x0e\x16\x6c\x04\x69\x0e\x22\x26\x3a\xe7\x87\x09\x52\x0a\xc4\x06\xf7\xc1\xf0\xc3\x4d\x28\x36\x1a\xc3\x31\x75\xcb\x70\x5a\x06\x0d\x85\x96\x17\x3f\xa1\x41\xa7\xcb\x1f\x6a\xad\xfc\x19\x37\x86\xcf\x8b\xc2\x93\x2b\x8a\xe5\x2a\xf7\xa4\x1c\xf9\xbf\x34\x3d\x2f\x17\x9d\xf3\x2f\xda\xd3\x22\xe1\xfb\x12\x4d\x5c\x60\x29\xdd\x79\x51\x28\x77\xf0\x45\xf1\xf4\x65\xbb\xfa\x60\xcc\x6f\xba\xbc\x2b\x26\x97\xf6\x7c\xcc\xaf\xdb\xc8\x8a\xbf\xce\x64\x63\x2b\xac\x87\x65\x32\xed\xcb\x0b\x05\x35\xdf\xa1\x64\xa1\x37\x97\x84\xcc\x36\x25\xb7\x08\xd9\x74\x2b\x37\xdb\x72\xdc\x7d\xda\x70\x5f\x5b\x73\x58\xc3\xb8\x3f\x3a\x2c\xc7\xe1\xc5\x10\xde\xc5\x12\xde\x83\x29\xbc\x8b\x78\xbc\x8b\xf1\xa0\x7d\xc9\x9d\xce\x7c\xbd\xaa\xfa\x88\xf0\x10\x76\x93\xd6\xda\x5b\x89\x2d\xc1\xef\x46\x97\xb6\xc2\x1f\x8d\x7c\x3b\x67\xdd\xd4\x95\x1b\xfb\x38\x75\x7d\x3c\xb5\x97\x3c\xd8\x36\x4b\xb2\x25\xeb\x73\x49\xe9\x1a\x53\xde\x9f\x73\xf1\x5b\xf0\x62\x49\x74\xfa\xa0\x8d\xaa\x03\xc2\x3d\xda\x35\x13\x71\xd2\xc0\x41\x17\x2f\xe4\xbe\x13\x4d\x4e\xac\xa2\x51\xe2\xc3\xbb\x4d\xa2\xc0\x9c\x9d\x74\x79\xb8\xc1\x80\x90\xe6\x91\x57\x2e\x27\x6b\xef\xac\x54\x17\x1e\x49\xd7\x79\xab\x9c\x47\x07\xdd\x8d\x23\xff\xc6\x6d\x20\x8b\xf1\x3c\xa2\x3b\xcb\x41\x8e\x7e\x16\xdf\x51\x96\x3a\xdf\xe0\x75\x81\x23\x51\xa6\x0f\xf0\x24\xba\x17\xb8\x7a\x7c\x8e\x8c\x80\x7f\xb6\xc7\xba\x82\x1d\xf2\x0d\xa0\xbd\xfd\xfe\xbb\x2f\x5f\x7b\x73\xd8\x5b\xd7\x28\xfa\x3c\xc3\x21\xf6\x98\x65\xb9\xb9\xff\x27\xa6\x3f\x4d\xf1\x54\xb2\xe6\x49\x8e\x57\x3e\xab\x24\x53\x2d\x7e\xd7\x27\x84\x94\xb6\xf3\x3b\x16\x0f\xed\xe9\xb6\x3e\x0d\xd8\x95\x70\xf3\x23\x82\xf1\xa4\x4c\x79\x56\x96\xdd\xa9\x55\xde\x17\xe5\x33\x96\x2f\x0f\x8f\xee\x88\xab\x7e\x42\x30\x96\x7a\xfb\xdc\xb6\x68\x54\xab\xc3\x84\x30\x95\x75\x16\x0e\x59\xdc\x5b\x07\x8a\x58\x0c\xf9\x5b\xcc\xfb\x21\x83\xd0\x69\xc2\xc6\x2f\xe7\x51\x57\x83\xfb\x31\x4e\x32\xbc\x0b\x1e\x5c\xe0\x8f\xc1\x9d\xc4\x1f\x65\xaa\xf3\x06\x39\x9c\xde\x1d\x09\x8b\x46\xb5\x4f\xfc\x6f\xcb\x81\x05\xe6\x82\xab\x8f\xce\x5d\x46\x97\x61\xb6\x63\xde\x57\xa3\x2b\x30\x55\xc8\xa7\x6b\x31\xb7\x03\x37\x8f\xc4\xab\xfd\x81\xd7\x1d\x37\x83\xc9\x53\xb0\x13\xbe\x56\x5d\x0a\x3a\x6e\xa3\xef\x9c\x0e\x27\x37\xff\xce\xbe\x61\x15\xfc\xe7\x6b\x52\x85\xaa\x94\x93\x93\x07\xac\xb1\x41\x43\x7e\xae\x2a\xc5\x70\xf6\x8a\x4c\xca\x73\x5c\x97\xe7\x0d\xdc\xb8\x3c\x13\xd4\x2a\x2d\xfd\x4e\x04\x7a\xdc\xd1\xd5\xf0\x34\x20\xcd\x1f\x77\xc5\xe4\xe0\x03\xee\xb9\x12\xa3\x55\xac\x84\xed\x1c\x89\xc9\x28\x73\x07\x89\xd2\x95\xf7\x90\x18\x7b\xff\x2a\x89\x6c\xf4\x79\x12\x19\x65\xa4\xa4\x11\x77\x44\xe2\x3f\x2f\x9b\x51\xf1\x5d\x27\xf0\x65\x0d\xaf\xd3\xfe\x95\x99\xe2\xdf\xff\x02\x00\x00\xff\xff\x3d\x82\x38\xde\x6f\x0d\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/nodejs"].(os.FileInfo),
		fs["/python"].(os.FileInfo),
	}
	fs["/python"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/python/README.md"].(os.FileInfo),
		fs["/python/__init__.mustache"].(os.FileInfo),
		fs["/python/__init__mod.mustache"].(os.FileInfo),
		fs["/python/base_model.mustache"].(os.FileInfo),
		fs["/python/model.mustache"].(os.FileInfo),
		fs["/python/requirements.mustache"].(os.FileInfo),
		fs["/python/setup.mustache"].(os.FileInfo),
		fs["/python/typing.mustache"].(os.FileInfo),
		fs["/python/util.mustache"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
