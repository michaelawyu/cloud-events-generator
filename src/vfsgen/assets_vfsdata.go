// Code generated by vfsgen; DO NOT EDIT.

package vfsgen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2019, 7, 12, 0, 26, 16, 607643613, time.UTC),
		},
		"/python": &vfsgen۰DirInfo{
			name:    "python",
			modTime: time.Date(2019, 8, 8, 4, 53, 20, 518289887, time.UTC),
		},
		"/python/README.md": &vfsgen۰CompressedFileInfo{
			name:             "README.md",
			modTime:          time.Date(2019, 8, 6, 4, 59, 20, 645250003, time.UTC),
			uncompressedSize: 528,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x4f\x6f\x13\x31\x10\xc5\xef\xfe\x14\x23\xe5\xd2\x88\x66\x73\xe8\xad\xb7\x08\x21\xe8\xa9\x11\x84\x53\x14\x29\x8e\xfd\xb2\xb6\xb0\x3d\xc6\x33\x4e\xb5\xdf\x1e\xed\x16\x0a\x48\x3d\x3f\xff\xe6\xfd\xf1\x8a\x3e\x26\xee\x9e\x3e\xdd\x50\x54\xe8\x33\x0a\x9a\x55\x6e\xb4\x6b\x1a\xaf\xd6\xa9\x18\xb3\x5a\xd1\xf3\x0d\xed\x16\xf1\x62\x0e\x21\x0a\x55\xeb\x7e\xd8\x11\x14\x85\xc6\x57\x00\x9e\x2e\x13\x69\x00\x1d\xdf\xbf\x77\xba\x0b\xaa\x55\x1e\xb7\xdb\x31\x6a\xe8\x97\xc1\x71\xde\xe6\xe8\x82\x45\xb2\x2f\x53\xdf\xba\x19\xdb\x60\xc1\x36\xe3\x1f\x6c\x3d\x98\x27\xa5\x80\x54\x85\x26\xee\x04\x2b\x11\x8d\x6a\x63\xdf\x1d\xc8\x16\x4f\x8e\x8b\xf4\x8c\xff\x7a\xdc\xff\x56\x52\xb2\x17\x9e\xe3\x11\x17\x33\x71\x6f\xb4\x18\x6c\x7c\x8b\x37\x14\x92\x49\x14\x59\x06\x63\x0e\x01\x6f\xad\xba\x40\x28\xb3\x8f\xd7\x08\x4f\x8a\x5c\x93\x55\x08\x5d\x1b\x67\x3a\x3e\x57\x94\xdd\xfe\xe9\xbd\x66\x5c\x51\x6c\x8d\x7f\xd3\x0f\x0a\x17\xd6\xc3\xb2\xe0\x57\xfc\xec\xb1\x21\xcf\xf1\xcc\x7e\xd2\xc0\x85\x1e\x3e\x2c\xd2\x77\xb1\x23\xcc\x81\x67\x67\xd2\x7f\x06\xbe\xa7\x58\x44\x6d\x4a\x14\x95\x12\x3b\x9b\xd2\xf4\x68\xcc\xf9\x7c\x36\x35\xd6\x87\x37\x75\x03\x3a\xee\x77\x87\x2f\xa7\x45\x32\xdf\x80\xd7\xaf\xf0\xec\xfa\x6c\x68\x35\x72\x39\xdd\xad\xe9\xca\x8d\x32\x37\xd0\xd8\xa3\x87\x2c\x2b\xcd\x47\x5a\x77\xf3\x13\x19\xcc\xaf\x00\x00\x00\xff\xff\x6b\x44\x20\x15\x10\x02\x00\x00"),
		},
		"/python/__init__.mustache": &vfsgen۰CompressedFileInfo{
			name:             "__init__.mustache",
			modTime:          time.Date(2019, 8, 8, 8, 8, 40, 752584975, time.UTC),
			uncompressedSize: 158,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\xb1\x0e\xc2\x30\x0c\x04\xd0\xdd\x5f\x61\xa9\x0b\x0c\xc0\x5a\x75\x67\x42\xe5\x17\xa2\xd0\x38\xa8\x22\x89\x21\x4e\x58\xac\xfc\x3b\x2a\x81\xf1\xee\xf4\x6e\xc0\x85\xdd\x9a\xee\x13\xd6\xe2\x0f\x23\xc0\x80\x3e\xd8\x07\x8d\x13\x26\x7e\x59\xf0\x99\x23\x1a\xe3\x6b\xa9\x99\x8c\xc1\x35\x3e\x39\x17\xb4\x37\xe1\x50\x0b\x99\x9e\x37\xf6\x5b\xe8\x4d\xa9\xe0\x12\xac\xc8\x8e\x64\x0f\xaa\xc3\xcc\x4e\x5a\xfb\x3e\x1d\x55\x67\x76\x57\x1b\xa9\xb5\xbf\x50\x3d\x6f\xe6\x12\xa4\xf7\xa0\x7a\xea\x04\x3e\x01\x00\x00\xff\xff\xcb\x09\x33\x7e\x9e\x00\x00\x00"),
		},
		"/python/__init__mod.mustache": &vfsgen۰CompressedFileInfo{
			name:             "__init__mod.mustache",
			modTime:          time.Date(2019, 8, 6, 3, 44, 35, 949550340, time.UTC),
			uncompressedSize: 157,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8c\x4d\x0a\x02\x31\x0c\x46\xf7\x3d\x45\xa0\x6b\x75\x3b\xcc\x15\x06\xbc\x42\x89\xd3\x54\x06\xdb\x46\x9b\xd4\x4d\xe8\xdd\xc5\x51\xc1\xe5\xf7\xf3\x9e\x87\x95\xe3\x56\xaf\x33\x74\x4d\x87\xc9\x39\x0f\x29\xe3\x8d\xa6\x19\x2a\x3f\xd0\xa5\xc6\x05\x42\x48\x5d\x7b\xa3\x10\x60\x2b\x77\x6e\x0a\x78\x11\xce\x5d\x29\x7c\xf2\x1b\xfb\x2e\xf4\xa4\xaa\x80\x35\x42\x44\x45\x58\x33\x8a\x90\x38\x33\xbf\x64\x19\x63\xf7\x1d\xcd\x96\x2c\x67\x2c\x34\xc6\x8f\xfb\xab\x9c\xd9\x69\x3f\xbf\x02\x00\x00\xff\xff\xba\xbc\x4c\xcc\x9d\x00\x00\x00"),
		},
		"/python/base_model.mustache": &vfsgen۰CompressedFileInfo{
			name:             "base_model.mustache",
			modTime:          time.Date(2019, 8, 8, 8, 12, 31, 21303731, time.UTC),
			uncompressedSize: 2304,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\x94\x43\x24\x40\x55\xdb\xab\x00\x17\x45\x0f\x45\x5b\x20\x6d\xd1\x0a\x7b\x31\x0c\x99\xb6\x46\x31\x13\x89\x64\x38\xe3\x85\xbd\x41\xfe\xfb\x82\xd4\xa7\x2d\x7b\xbd\x9b\xe5\xc5\x26\x39\xef\xcd\x9b\x47\x71\x28\x1b\xa3\x2d\xc3\x13\x69\x15\x74\xff\x8d\xb1\x52\x71\x3f\xe3\xa3\x91\xea\x31\xe8\xa7\x24\x0f\x41\x50\x59\xdd\x40\x0a\xdd\xd2\x9e\x65\x1d\x04\x39\x2c\xba\xd8\x34\x3f\x1a\xfc\x20\x6c\x74\x9f\xdf\xc7\x41\x10\x6c\x6b\x41\x04\x0f\xba\xc4\x3a\xd2\x9b\x27\xdc\x72\x9c\x05\x00\x00\x77\xa0\x0d\x2a\x61\xa4\x03\x50\x06\xf9\x0e\xe1\x19\x8f\x20\x09\x04\xb3\x95\x9b\x3d\x23\x28\xd1\x20\x08\x55\x02\xef\xb0\x43\x7d\x14\xf5\x1e\x4f\xa3\xf8\x68\x30\xf5\xdb\x1d\x65\xe1\x56\x08\x16\xf0\xfa\x16\x74\xb0\x21\xfa\x41\x98\x77\x24\x73\x16\xb5\x08\x05\x25\x56\x52\x49\x96\x5a\xb5\x49\x07\x86\xa2\x11\x66\x92\xf4\x57\x5f\x7b\x83\xbc\xd3\xa5\x5f\x28\xb1\x02\xe7\x5e\x51\xca\x2d\x47\xdb\x9a\xb2\xa9\x69\xcb\x7c\x95\x40\x29\x9f\x39\x86\x1f\x7e\x81\xbc\x75\xc9\x8d\x30\x0c\xff\x43\xde\x5b\x45\x4e\x19\x38\x30\x08\x02\x01\x8d\x73\x35\x0c\xc3\x21\xd2\xfa\x30\x7f\x26\x69\x89\x84\x56\x8a\x5a\x7e\xc2\xc2\x07\x46\x8e\x3b\x81\x6d\x4d\x71\x30\xc8\x61\xdd\x8a\x21\xac\xab\xf8\x6a\x4a\x8f\x07\x63\xb5\x41\xcb\x12\xa9\x4d\xef\x80\xc1\x00\xc9\xac\x33\x3d\x6b\x57\x27\x3c\x13\x71\xb4\xaf\x79\xe2\x8f\x1b\x95\xb6\xde\xbf\x04\x0a\x67\x2d\xc9\x43\x2a\x19\xad\x64\x6c\xc8\x8b\x4a\x4f\x8e\x74\x22\xd1\x8d\xf6\x78\x16\xf0\x88\xec\x48\x3c\x20\xf1\x7c\xf1\x49\x9c\xac\x40\x92\x54\xc4\x42\x6d\x31\xf2\xa8\x04\x6a\x49\x7c\xc6\x37\xca\x5c\x3a\x92\x15\x2c\x7c\x54\xd4\x08\x13\xcd\x02\xdd\xa8\x45\xb3\x29\x05\x1c\x32\x38\xa4\xbd\x95\xb1\x4b\xb7\x13\xe4\x15\x1d\x12\x08\xbb\x8d\x30\x06\xac\x09\xe1\x90\x5c\xa4\xf2\xaa\x66\x3b\xf1\x69\x21\x58\x4f\xb8\xbb\x3a\x46\xfe\x9b\xc5\x78\xc4\x28\x74\x4e\x3d\x77\xc9\x45\xde\x26\xf6\x7c\xb7\x5c\x72\x87\x9a\x41\xe4\x7e\x96\x3f\xad\x12\x3f\x5f\xfe\xbc\x1a\xf5\xc4\x17\xd1\x93\x8a\x3b\xc4\xdc\x53\xb7\xf1\x05\x5b\xd3\xf6\x7b\x9a\xf3\xcf\xec\x25\xfc\x3a\x13\x83\xf3\x3b\xd7\x06\xf9\xd5\x1b\x97\xff\xaf\xff\xff\xf9\xfb\xf2\xe5\x77\x4d\xa6\x20\xb6\x19\x10\xdb\x1b\x5d\xc0\xb1\x40\x29\x58\x5c\x69\x05\xee\xb2\xc3\xc2\x53\xa6\xb5\x16\x25\x45\x3d\x7b\x7c\x2e\x7d\x5b\x53\x3a\xb6\x25\xdf\x81\xc6\x3a\xba\x26\xe1\x45\xbf\xa7\x49\x78\x9d\xc4\xd6\x3f\x23\x3d\xb2\xef\x15\xc4\xf6\x4a\xab\xf0\xc2\xbc\xf8\x72\xdf\x98\xae\x15\x4c\x3e\x94\xa9\x36\xea\x6e\xfe\x75\x69\x6d\x7e\xb0\x68\x2c\x12\x2a\x16\xae\x79\x83\xae\x46\xdd\xdf\xac\xad\x7d\x27\x53\x53\x69\xdb\x08\x9e\xe9\x1b\xfc\x7b\x7d\xbd\xfb\x4d\xaa\x52\xaa\xc7\xb7\xb7\x7e\xe1\x4f\xfa\x23\xcf\xff\x1d\xe6\x3f\x9e\xcf\x47\xc0\x50\x66\x51\x38\xf1\x45\x71\xa1\xd0\xdf\xb5\x85\xb5\x57\xb3\xf6\xaf\xd7\xba\x95\xb6\xbe\x20\xba\x57\xe9\x1c\x8b\xa7\xe4\xf8\xd2\x51\x27\xa0\x79\x87\xf6\x8a\x95\xd6\x3d\x86\x15\x6c\x34\xef\xa0\x7d\xcc\x09\x84\x45\xc0\x97\xbd\xb8\xf4\x10\xf9\x7c\x85\x37\xa5\x28\x60\xb1\x68\xc9\x87\x95\xa9\x02\x85\xdf\xa5\x40\x69\xbe\xaa\xc2\xed\x39\xe6\x41\xc0\x10\xf0\x39\x00\x00\xff\xff\x32\x09\xa7\x28\x00\x09\x00\x00"),
		},
		"/python/model.mustache": &vfsgen۰CompressedFileInfo{
			name:             "model.mustache",
			modTime:          time.Date(2019, 8, 13, 21, 31, 41, 668539294, time.UTC),
			uncompressedSize: 5399,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x6d\x6f\xdb\x38\x12\xfe\xee\x5f\x31\xb0\x3f\x58\xc2\x39\x72\x72\xed\x01\x77\x46\x53\x5c\xb6\x49\xbb\xc6\xf6\x0d\xdd\xb4\x1f\xb6\x68\x1c\x5a\x1a\xdb\xdc\x95\x48\x95\xa4\xd2\x7a\x09\xfd\xf7\x05\x49\xbd\x50\x96\xdd\x24\x4d\x6b\xa0\x85\x38\x1a\xce\x33\xf3\xcc\x70\x38\xca\x08\x62\x9e\x50\xb6\x9e\x41\xa1\x56\x47\xff\x1d\x0c\x56\x82\x67\xb0\x58\xac\x0a\x55\x08\x5c\x2c\x80\x66\x39\x17\x0a\xc8\x52\xf2\xb4\x50\xb8\x70\x6b\xa7\x96\x10\x85\x8a\x66\x58\x2b\x99\xf5\xa4\x95\xc2\x08\x18\xff\x4c\x66\xf0\xfc\xf1\xf1\x49\x65\x59\x6d\x73\xca\xd6\xf5\x86\x97\x54\xaa\x09\x9c\xd3\x58\xed\x2a\x6b\x3d\x3a\x2b\x14\x2f\x4b\xf3\x34\x97\xef\xdf\xcf\xcf\x6f\x1e\x97\xe5\xa0\xda\x58\x14\x34\x19\x68\x3d\xf5\xde\x68\x3d\xad\x76\x38\xa4\x28\x5a\x12\x89\x8b\x8c\x27\x98\xd6\x78\xaf\xcc\xa2\x7e\x5d\x0b\x0b\x45\x53\x0b\x38\xb7\x6b\x59\x96\x95\x86\xd6\xbf\xa5\xf2\x35\xc9\xb0\x2c\x6b\x5d\x5f\xd4\x78\x7c\xf1\x9f\xe3\x13\xeb\x4c\xb3\xdf\x58\xb3\x58\x65\x39\x88\x53\x22\xa5\xbf\x31\xb0\x6f\xc2\xd9\x00\x00\x60\x38\x1c\xbe\x7e\x73\x79\x31\x83\xcb\x0d\x95\xe0\x74\xa9\x04\x52\x28\x0e\x6b\x64\x28\x88\xc2\x04\x96\x5b\x78\x96\xf2\x22\x81\x8b\x1b\x64\x4a\xc2\x0b\xf7\x86\x0b\x6b\x23\xd8\x28\x95\xcb\xd9\x74\xba\xa6\x6a\x53\x2c\xa3\x98\x67\xd3\x8c\xc6\x1b\x82\x29\xf9\xb2\x2d\xa6\xb1\xd9\x7a\x84\x76\xeb\xd1\xba\xde\x1a\xda\xbd\x85\x34\xe9\xc8\x78\x42\x57\x14\x13\x50\x98\xe5\x29\x51\x28\xc1\x52\xf0\x26\x47\x76\xf6\x76\x0e\xeb\x5b\xf1\x2a\xcd\x4b\xce\x53\x39\xe5\x39\x32\x92\xd3\x1e\x16\x4b\x50\xc0\x59\x4e\xe2\x0d\xc2\xbf\xa3\x63\x78\x49\x63\x64\x12\xa3\x81\x7d\x7d\xce\x81\x71\x05\x98\x50\x05\x6a\x83\x15\x19\x19\x61\x05\x49\xd3\x6d\x54\xd3\xe5\x94\x13\x5c\xc1\x62\x41\x19\x55\x8b\x45\x20\x31\x5d\x69\x3d\xfa\x40\x84\x2c\xcb\x09\x68\xed\x88\x3e\xd5\x7a\x74\x8e\x2b\x52\xa4\xea\x03\x49\x0b\x2c\x4b\xad\x75\x57\x50\x6a\x3d\xdd\x55\xb9\xea\x0a\x5e\x73\x86\x7b\xb4\xa6\x0e\x2d\x9c\xed\xd4\x01\x54\xbf\xe1\x70\xe8\x17\xcb\x11\x10\x70\xa5\x98\xe0\x8a\x32\x4c\x80\xb2\x43\x39\x6d\x6c\x34\x31\x35\x92\x59\x4e\x04\xc9\x9a\x08\x4d\xd9\x60\xb3\x02\xbe\x02\x65\xca\xc8\x03\x8e\x0e\xb8\x37\x53\xdb\x1c\x3d\x3b\x5a\x9f\x13\x45\x2e\xb7\x39\x7a\x68\x4d\x94\x7e\x54\xcd\xb3\x61\x3d\xaa\x52\xbd\x30\xe6\x24\x9c\x82\x1e\xf4\x9d\x36\xbf\x71\x0d\x35\x36\x58\x1e\x58\xa9\xf5\xe8\x57\x22\x5f\x71\x81\x65\x39\xd1\x7a\xda\x2c\x06\x7d\xf8\x72\xd0\x45\x27\x4a\x09\xba\x34\x6d\x29\x23\xf9\x1d\xd1\xc7\x5a\xff\x42\x24\x56\xeb\xfb\xa1\x37\xd6\xb5\x1e\x1d\xad\xa8\x90\xca\x29\x36\xcf\x1d\xef\x16\x4d\x62\x4e\x1b\xa6\x3d\xb3\x56\xf9\xff\xb6\xca\x33\x54\x1b\x9e\x34\x85\x6d\xce\xde\x22\xa1\xb1\x0a\xe2\x54\x4e\x20\xa1\x7f\xa9\x10\x8e\x9e\x1a\xd7\x9b\xc4\x8e\x67\x7e\x52\xde\xa1\x2a\x04\x93\xf6\xdc\x98\x8d\x40\x64\x5d\x70\x83\xdd\xe2\x31\xe6\x66\x70\x66\xf5\xa2\x6e\x41\xcc\xac\xb0\x95\x09\x6b\x76\x06\x67\x0c\x28\x93\x8a\xb0\x18\xef\x55\x64\xc2\x19\xf5\x54\xf7\x56\x92\x83\xb1\x8d\x38\x4a\x50\xa2\xa0\x24\xa5\x7f\x57\xbd\x3b\x30\xfe\x4e\x20\x4e\x65\x58\xeb\x7b\x59\x76\x24\xe6\x82\xe7\x28\xd4\xb6\x61\xb0\xa6\xdb\xb6\x86\xb0\x43\xd5\x0b\x54\x8e\xa7\x6f\x1e\x1b\xff\x10\xea\x73\x94\xb1\xa0\xb9\xa2\x9c\x95\xbd\xc6\xdf\x67\xeb\xd6\x33\xb9\x87\xa0\x3d\xa7\x6f\x0f\x43\xdd\xb2\xaa\x82\xaf\x97\x91\x44\xa5\x50\xec\xe7\xa0\xed\x8a\x5d\x36\x7e\xff\x69\x6c\xdc\xbb\x53\xdd\xaf\x37\x19\x76\xec\x68\x70\xc1\x8a\xcc\x93\x93\x34\xe5\x5f\x30\x59\xdc\x98\x46\x6d\x3a\xd2\x47\x33\x4a\x18\x21\x59\xa6\x68\xdb\xb7\x2c\xcb\xa1\xd6\xba\xbe\x02\x86\x9d\x1e\x00\x7e\x13\x30\x33\xc5\xee\xd6\x4f\xbd\x8b\x7f\x34\x97\xcf\x38\x53\x84\x32\x14\xf5\xc0\x62\x26\x1b\x5f\x58\xbb\x47\x57\xf6\x92\x93\xa8\x02\x5d\x47\x58\x86\x11\x95\xb2\x58\x1a\xa1\xf9\xd7\x0d\x21\xf4\x12\x66\x4b\x81\x50\x89\x60\xbd\xb9\x10\x82\x8b\xa0\xf3\xd6\x52\x33\x67\x37\x24\xa5\x09\x54\x1c\xac\xb8\x80\xeb\x16\xed\x1a\x3e\xea\xe3\xf2\xd3\x04\xb2\x42\x2a\x58\x22\x10\x70\xe0\x26\x2b\x1f\xf5\x49\xf9\x69\x78\xe0\x3c\xd7\xbf\x68\xc5\x45\x46\x54\x30\x9c\xc0\x30\xfa\x93\x53\x16\x64\x24\x0f\xa4\x12\x93\xdd\xc0\xe0\x08\xf6\x45\x14\x4e\x6e\x41\x68\x42\xe9\x23\xf4\x6c\x75\x36\x87\x6e\x2a\xdc\xa5\xdf\x0a\xbb\x82\xab\xae\xc0\x4b\x50\xeb\xbf\xcd\x15\x65\x3b\x98\x0f\xcb\x47\x3f\x1d\x81\x3e\x2e\xc3\x36\x1d\x9c\xd9\x26\xab\x4f\xca\xe1\x41\xe6\xdb\xed\x3d\x42\xf6\xd1\xd1\xa3\xa2\x3a\x34\x87\xa6\xec\x0e\x19\xf5\x04\x2c\xc1\x8c\x42\xb3\x9e\x4f\xbd\xbb\x4e\x2a\x11\x98\x01\x3d\x32\xff\x3d\x0e\xc2\xb0\x37\xa9\x8f\xe6\xf2\xdd\xf3\x67\x8f\x1e\x3d\xfa\xdf\x83\xc1\xea\xaf\x8d\xa8\x50\x31\xe3\x5f\x02\x73\x96\x78\xc5\xd2\xf8\x72\x1c\xc2\xbf\x60\xfc\xc7\xd8\x79\xd0\x62\xb6\x1f\x0b\x5a\x5f\xb5\x4f\x3e\x31\xef\xf0\x73\x41\x05\x26\xf7\xf1\xb0\x57\x0b\xfb\x53\xef\x4c\x5c\x57\x29\x37\x35\xb6\x44\xb8\x36\xe6\xae\x87\x61\xff\xbb\xc2\xf3\xc4\xb5\xaa\x0f\xc6\x24\x71\x0d\xd8\x7e\x6a\x90\xaf\x2f\x91\xad\xd5\xe6\xb0\xaf\x06\xc4\x00\x00\x61\x09\xa4\xc8\x82\xe6\x3a\x80\xa7\xa0\xb5\x67\xe1\x61\x11\xa5\xd6\x4a\x53\xcb\x29\x4a\x73\xbd\x10\x06\x5c\x00\x7e\x2e\x48\x0a\x8a\x9b\x0d\x1e\xe0\xde\x98\xfd\x90\x4c\x84\x94\x3d\x20\xc2\x27\x26\xc2\xd6\xc2\x0f\x8d\x70\x2d\x90\x28\x14\xfb\x83\x6c\x31\xf7\x07\xe9\x45\xe5\xd2\x48\xb3\xce\x65\xf6\xad\x10\x9b\x17\x4f\xb5\x1e\x5d\x7c\x8d\xd3\x42\xd2\x1b\x6c\x6c\x9c\x6a\x3d\xed\x4b\x5d\xaa\xdd\xf3\xa1\x2f\x97\xef\x2e\x64\x7b\x95\xb8\xf7\x6d\xde\xb5\xbe\xea\xbb\xe1\xf3\xb4\xd7\xcf\x6b\xcf\xcf\x43\xf5\x51\x71\xe5\xaa\xe3\x7b\x88\x7b\xd2\x21\xae\xb6\xd1\x25\xae\x96\xba\x0a\xfa\xf9\xc4\x75\xca\xa9\xc3\x5d\x8d\x7e\x90\xbb\x5a\xe1\xda\x73\xf5\x50\xd9\xb5\xdc\xbd\x25\x66\x68\x64\x77\xe4\xce\x2c\x04\x46\x12\x89\x88\x37\x81\x18\x6b\xad\x1b\x03\xe5\xd8\x1f\x32\x7f\x34\x47\x19\x51\xf1\x06\x72\x07\x66\xef\xcf\x16\x78\x6f\x94\x6d\x60\xee\x68\xcd\x15\x66\xf2\x21\x0d\xb2\x32\xf0\xb0\xee\xc1\x8a\x6c\x89\xc2\xdc\xef\xd4\x98\xbb\x53\xa3\xac\x80\x0f\x9d\x83\x3a\x30\x77\x10\xbe\x3f\xcc\xaa\x4b\xfe\xd4\x30\x6f\xe9\x96\xdf\x8c\xb4\x8d\xcd\x8d\xe8\x3b\xb7\x60\x3b\xd5\xdc\xe1\x2b\xbc\x33\x00\xd4\x1f\xe4\x06\xa4\xfa\xa3\xdd\x3f\x01\x00\x00\xff\xff\x56\xff\x4e\xaa\x17\x15\x00\x00"),
		},
		"/python/requirements.mustache": &vfsgen۰CompressedFileInfo{
			name:             "requirements.mustache",
			modTime:          time.Date(2019, 8, 8, 1, 15, 34, 904035169, time.UTC),
			uncompressedSize: 120,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xce\xac\x50\xb0\xb3\x55\x30\xd4\x33\x34\xd4\x33\xe0\x2a\x4e\x2d\x29\x2d\x28\xc9\xcf\xcf\x29\x06\x09\x1a\x19\xea\x19\xe8\x19\x70\x55\x57\x2b\xbb\xa4\x16\x14\xd7\xd6\x82\x58\x9e\xc5\x5e\xc1\xfe\x7e\x60\xb6\x3e\x12\x5b\xd9\xb3\xd8\x23\x24\x24\xa0\xb6\x96\xab\x28\xb5\xb0\x34\xb5\xb8\x04\x62\x80\x9e\x11\x58\xbf\x3e\x5c\xb6\xba\x5a\x1f\x62\x16\x20\x00\x00\xff\xff\x09\xeb\x33\xb5\x78\x00\x00\x00"),
		},
		"/python/setup.mustache": &vfsgen۰CompressedFileInfo{
			name:             "setup.mustache",
			modTime:          time.Date(2019, 8, 8, 7, 1, 46, 974393132, time.UTC),
			uncompressedSize: 660,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x92\x4f\x6b\xe3\x30\x10\xc5\xef\xfa\x14\x43\x7c\x48\x0b\x69\x7c\x5d\x02\x3a\x14\x37\x87\x42\x9b\x96\xd4\xed\x25\x14\xa3\xb5\x27\xb1\xa8\x2c\x69\xa5\x51\x8b\x31\xfe\xee\x8b\x2d\xe7\x1f\xbd\x79\xde\x4f\xc3\xf0\xde\x73\x02\xa5\xa9\xa4\x3e\xac\x20\xd0\xfe\xee\x0f\x63\xb2\xb1\xc6\x11\xf8\xd6\xb3\xbd\x33\x0d\x78\xa4\x60\xc9\x18\xe5\xe1\x88\x06\x65\x01\x7b\xa9\xab\xc2\x8a\xf2\x4b\x1c\xd0\x33\xd6\x75\xc9\x33\x92\xa8\x04\x89\xbe\x67\x9b\xfb\xe7\x35\x70\x98\x75\xdd\x6b\x7c\xb1\x11\x0d\xf6\xfd\x8c\x7d\xac\xb7\x6f\x8f\x2f\x9b\xc8\x3e\xd0\x79\x69\xf4\xa0\x3f\xac\xdf\xb2\xed\xe3\x6b\x7e\x62\x0f\xe8\x4b\x27\x2d\x4d\x3c\x7b\xd9\xe4\xf7\x59\x1e\x59\x66\x34\x89\x92\x06\xfd\x7d\xfb\x14\xb5\xf7\xed\xd3\x30\xb3\x04\x72\x03\x52\x7b\x12\x4a\x01\xd5\x08\x4a\xfe\x75\xc2\xb5\x0b\x70\x41\x8f\xc2\xde\x28\x65\x7e\xa4\x3e\xb0\x84\x25\x60\x5b\xaa\x8d\x3e\x6d\xdc\x21\x2c\xa3\xee\xd0\xe1\xbf\x20\xbd\x24\x5c\x5d\xa4\xc0\x12\xa8\x89\xec\x2a\x4d\x6d\x6b\xe5\x32\xae\x2f\x8d\x3b\x8c\x73\x7a\xf1\x90\x8d\xdf\x37\x0c\x00\x40\x8b\x06\xf9\x10\xca\x62\x1c\xbf\xa3\x71\x3e\xa5\x11\xc5\xea\xec\x98\x5f\xc4\x11\xa1\x08\x54\x1b\x57\x60\x23\xa4\xe2\x53\x18\x91\x04\xa7\xf8\xc9\x7f\x94\xbe\xb0\xfd\x31\xae\xf2\x7c\x37\xcb\x94\x09\x15\xac\xbf\x51\x93\x9f\x2d\x7e\x17\xf2\x19\x37\x26\xfb\xc5\x68\xd9\xa1\xe7\xbb\x09\x1c\x0b\xe6\x57\x75\xdf\xdc\x5e\xd1\x62\x68\x9d\x77\xf3\xf9\x0a\x76\x73\x6f\xb1\x4c\x71\x3c\xb8\x6c\x45\xa3\xe6\x9f\xfd\xf1\x46\xa9\x42\x85\xc5\xd5\x52\xee\x02\xb2\x5b\xd6\x75\xe9\xf9\xef\xf9\x1f\x00\x00\xff\xff\x7f\x55\xd9\x30\x94\x02\x00\x00"),
		},
		"/python/typing.mustache": &vfsgen۰CompressedFileInfo{
			name:             "typing.mustache",
			modTime:          time.Date(2019, 8, 8, 6, 56, 5, 122341728, time.UTC),
			uncompressedSize: 123,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\xf6\x2c\x0e\x2e\x29\xca\xcc\x4b\xaf\xad\x2d\x2e\x29\xaa\xae\xd6\x47\xf0\xc1\x92\x9e\x79\x25\xa9\xe9\xa9\x45\xb5\xb5\x99\x79\x25\x60\x59\xb8\x00\x58\xda\xaf\x34\x37\x09\xc4\x49\xcb\xc9\x4f\x84\xc8\xc3\x44\xc0\xd2\x4e\xf9\xf9\x39\xa9\x89\x79\xb5\xb5\x49\xf9\xf9\x39\x60\x69\xb8\x08\x20\x00\x00\xff\xff\x9f\xfd\x1d\xec\x7b\x00\x00\x00"),
		},
		"/python/util.mustache": &vfsgen۰CompressedFileInfo{
			name:             "util.mustache",
			modTime:          time.Date(2019, 8, 8, 8, 9, 26, 109970852, time.UTC),
			uncompressedSize: 3386,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\xf3\x36\x0c\xbe\xfb\x57\x10\x3d\xc5\x80\x61\xbc\xef\x65\x18\x02\xf4\x30\x60\xc3\xb0\xcb\x0e\xc3\xbb\x53\x17\x18\x4a\xcc\xa4\x5a\x6d\xc9\x90\x98\xa2\xdd\xba\xff\x3e\x90\xb2\x6c\xf9\x23\x1f\x43\xb1\x1c\x12\x47\x26\x1f\x4a\x0f\xc9\x87\xd2\x6d\x67\x1d\x41\xad\x08\x49\xb7\x98\x65\xfd\x82\xd7\x6f\xf1\x91\xde\x3b\x6d\x4e\x59\x96\xd5\x78\x84\xaa\x46\x8f\x4e\xab\x46\xff\x85\x9b\x5a\x91\x2a\xe0\xa5\x51\xde\xe7\xdb\x0c\x00\xe0\xe1\xe1\xe1\xc7\xd1\xc0\x43\xad\x0f\x54\x40\xa3\x3d\x15\xe0\xc9\x81\x36\x64\x41\x19\xb0\xfb\x3f\xf1\x40\x65\x26\x4e\xdb\x4e\x39\xd5\xf2\x1e\xd4\x36\xf1\x00\xeb\xd8\xa7\x4c\x6d\x24\xd6\x16\x0e\xfc\x03\x8d\x26\x74\xaa\x29\x7a\x43\x6d\x4e\x60\x8f\xfd\x3b\xa3\x5a\x8c\xf0\x0e\xe9\xec\xcc\x76\x08\xda\x6f\x54\x7e\xf5\x51\xe2\x82\xf6\xf0\xab\x35\x18\x4e\xc1\x9f\xe0\x24\x8b\x59\xb4\x94\xe8\xa0\x0d\xb3\x53\x6a\x43\x78\x42\x57\xd1\x7b\x87\x9e\xb7\x30\xbc\xdd\x1c\x1b\xab\xc2\x81\x0b\xd8\x5b\xdb\xe4\x0b\xd8\x94\xc6\xaa\x73\xba\xd5\xa4\x5f\xa7\x84\x8a\x0b\x36\x43\xd8\xc7\xc7\xfe\x00\xd7\xc1\x82\x8d\x20\xad\x41\xc4\x44\x97\xfc\xb0\x40\x4a\x81\xd8\xe0\x3e\x18\x7e\xb8\x09\xc5\x46\x73\x38\xa6\x6e\x13\x4e\xcb\xa0\xa1\xd0\xca\xea\x67\x34\xe8\xf4\xe1\x87\x46\x2b\x3f\xe2\xc6\xf0\x65\x55\xe1\x1b\x39\x55\x55\xec\xc3\x85\x32\xda\x5c\x22\x85\xad\x52\x72\xcb\xaa\x52\xee\xe4\xab\xea\xe9\xcb\x2e\xbf\x11\x81\x0b\xf2\x76\x04\xb6\x5a\x8f\xf0\x75\x17\x4f\xec\xaf\xb3\xd4\xda\x1a\x9b\x69\x09\x2c\x7b\xee\x42\xb1\xac\x77\x1f\x59\x18\xcc\x85\xec\xd5\x86\xe3\xf2\x27\x9b\x6e\xe5\x66\xcb\xcd\x3b\x4b\x1b\xee\x59\x6b\x4e\x05\xcc\x6b\xbf\xc7\x72\x1c\x5e\x0c\xe1\x43\x2c\xe1\x23\x98\xc2\x87\x08\xc3\x87\x18\x4f\x5a\x93\xdc\xfb\xc8\xd7\xab\x6a\xce\x08\x8f\x61\x37\x69\x1d\xbd\x1d\xb0\x23\xf8\xdd\xe8\x83\xad\xf1\x27\x23\xdf\xce\x59\xb7\x74\xe5\xa6\x3d\x2f\x5d\xbf\xbd\x77\x97\x3c\xd8\x36\x4b\xb2\x25\xeb\x6b\x49\xe9\x9b\x4e\xde\x8f\xb9\xf8\x2d\x78\xb1\xdc\x39\x7d\xd2\x46\x35\x01\xe1\x1e\x5d\x5a\x89\xb8\x68\xce\xa0\x79\x17\x72\xdf\x0b\x22\x27\x56\xd1\x2c\xf1\xe1\xdd\x36\x51\x57\xce\x4e\xba\x3c\xdd\x60\x40\x48\xf3\xc8\x2b\x97\x93\x75\x74\x56\xaa\x0b\xcf\xa4\x9b\xb2\x53\xce\xa3\x83\x7e\x9a\xc8\xbf\x79\x1b\xc8\x62\x3c\x8f\x68\xca\x66\x92\xa3\x5f\xc4\x77\x96\xa5\xde\x37\x78\x5d\xe0\x48\x54\xe7\x3f\xf0\x24\x9a\x16\xb8\xfa\xf6\x1c\x19\x01\xff\x6c\xcf\x4d\x0d\x7b\x64\x75\xd7\xde\x7e\xff\xdd\x97\xaf\x83\x39\x1c\xad\x6b\x15\x7d\x9e\xe1\x10\x7b\xce\xb2\x4c\xe5\xff\x89\xe9\x4f\x53\xbc\x94\xac\x75\x92\xe3\x38\x67\x95\x64\xaa\xc5\xef\xfa\xf4\x4f\x69\x1b\xdf\xb1\x78\x68\x4f\xb7\xf5\x69\xc2\xae\x84\x5b\x1f\xff\xc6\x93\x32\x87\x51\x59\xf2\x61\xd8\x1b\x4b\xc3\xeb\xd2\x76\x68\x54\xa7\xc3\xb0\x5f\xaa\x38\xeb\x84\x2c\x1e\xad\x03\x45\xac\x7d\xfc\x2d\xe6\xc3\x7d\x81\xd0\x69\xc2\xd6\x6f\xd6\x51\xf3\xc9\xa8\x8b\x97\x12\xde\x05\xdf\x41\xe0\x8f\xc9\x08\xe2\x8f\x32\xf5\xb8\x41\x0e\xa7\xf7\x67\xc2\xaa\x55\xdd\x13\xff\xdb\x71\x60\x81\xb9\xe0\xea\xa3\x73\x9f\xc0\x4d\xb8\xa6\x31\xcd\x79\x3e\x9d\x78\xa9\x20\x3e\x5d\x8b\xb9\x9b\xb8\x79\x24\x5e\x1d\x0e\x5c\xf4\xdc\x4c\x2e\x91\x82\x9d\xf0\x95\xf7\x29\xe8\xb9\x8d\xbe\x6b\xb2\x9b\x8c\xf5\xbd\x7d\xc3\x3a\xf8\xaf\x97\xa0\x0a\x45\x28\x27\x27\x0f\xd8\x60\x8b\x86\xfc\x5a\x11\x8a\xe1\xea\x44\x4c\xaa\x71\x5e\x86\xe3\x06\x6e\xcc\xca\x04\xb5\x4e\x2b\xbd\xef\xf9\x01\x77\x36\x09\x9e\x26\xa4\xf9\xf3\xbe\x5a\x1c\x7c\xc2\x3d\x57\x62\xb4\x8a\x95\xb0\x5b\x23\x31\xb9\xb9\xdc\x41\xa2\x34\xe1\x3d\x24\xc6\x56\xbf\x4a\x22\x1b\x7d\x9e\x44\x46\x99\x09\x67\xc4\x9d\x91\xf8\xf7\xcb\x76\x56\x7c\xd7\x09\x7c\x29\xe0\x75\xd9\xbf\x72\x85\xf8\xe7\xdf\x00\x00\x00\xff\xff\x7a\x2a\x51\xcc\x3a\x0d\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/python"].(os.FileInfo),
	}
	fs["/python"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/python/README.md"].(os.FileInfo),
		fs["/python/__init__.mustache"].(os.FileInfo),
		fs["/python/__init__mod.mustache"].(os.FileInfo),
		fs["/python/base_model.mustache"].(os.FileInfo),
		fs["/python/model.mustache"].(os.FileInfo),
		fs["/python/requirements.mustache"].(os.FileInfo),
		fs["/python/setup.mustache"].(os.FileInfo),
		fs["/python/typing.mustache"].(os.FileInfo),
		fs["/python/util.mustache"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
